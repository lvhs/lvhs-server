css:
  #event-entry {
    display: flex;
    margin-bottom: 20px;
  }

  .event-info {
    flex-grow: 1;
    margin-top: 18px;
    margin-left: 10px;
  }

  .entry-block {
    margin-left: 20px;
    margin-top: 18px;
  }

  .chat-image-block {
    /*border-top: 1px solid #fff;*/
    display: flex;
    padding-top: 10px;
  }

  .bubble-top-left {
    position: absolute;
    width: 0;
    height: 0;
    top: 10px;
    left: -4px;
    border: 5px solid transparent;
    border-right: 10px solid #fff;
    border-top: 0;
    border-bottom: 8px solid transparent;
  }

  .chat-image-left {
    border: 3px solid #fff;
    border-radius: 80px;
    width: 40px;
    height: 40px;
    margin-left: 10px;
    overflow: hidden;
    line-height: 30px;
  }

  .chat-name-left {
    color: #fff;
    padding-left: 10px;
  }

  .bubble-top-right {
    position: absolute;
    width: 0;
    height: 0;
    top: 10px;
    right: 1px;
    border-left: 10px solid #fff;
    border-top: 0;
    border-bottom: 8px solid transparent;
  }

  .chat-image-right {
    border: 3px solid #fff;
    border-radius: 80px;
    width: 40px;
    height: 40px;
    margin-right: 10px;
    overflow: hidden;
  }

  .chat-name-right {
    color: #fff;
    padding-right: 10px;
    text-align: right;
    line-height: 30px;
  }

.container-fluid[style="color: #fff;" ng-app="chat"]
  #event-entry.row[ng-controller="EventEntryController as entry"]
    .event-info
      = @event.scheduled_at.strftime('%Y/%m/%d')
      br
      = @event.artist.name
      br
      | #{@event.event_site.name} (#{@event.prefecture.name})

    .entry-block
      .btn-group.btn-group-lg[role="group" aria-label="..."]
        button.btn.btn-default type="button"
          span.glyphicon.glyphicon-ok
        button.btn.btn-default type="button"
          span.glyphicon.glyphicon-remove

  #event-chat[ng-controller="EventChatController as chat"]
    div[ng-repeat="comment in chat.comments"]

      / other user comment
      .row[ng-if="!chat.my(comment)" style="display: flex; margin-bottom: 10px;"]
        .chat-image-left
          img[ng-src="{{ comment.user.image_path }}"]
        div[style="flex-grow: 1;"]
          .chat-name-left[ng-bind="comment.user.name"]
          div[style="position: relative"]
            .bubble-top-left
          .panel.panel-default[style="margin: 0 10px;"]
            .panel-body[style="color: #333; padding: 8px 15px;" ng-bind-html="comment.body"]

      /- own comment
      .row[ng-if="chat.my(comment)" style="display: flex; margin-bottom: 10px;"]
        div[style="flex-grow: 1;"]
          .chat-name-right[ng-bind="comment.user.name"]
          div[style="position: relative;"]
            .bubble-top-right
          .panel.panel-default[style="margin: 0 10px;"]
            .panel-body[style="color: #333; padding: 8px 15px;" ng-bind-html="comment.body"]
        .chat-image-right
          img[ng-src="{{ comment.user.image_path }}"]

    /- submit button
    .row[style="position: fixed; bottom: 0; width: 100%;"]
      .input-group
        textarea.form-control[style="border-radius: 0;" rows="1" ng-model="chat.body"]
        span.input-group-btn
          button.btn.btn-default[style="border-radius: 0;" ng-click="chat.post()"] 投稿

script src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular.min.js"
script src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular-sanitize.js"
javascript:
  angular.module('chat', ['ngSanitize'])
    .controller('EventEntryController', [function() {

    }])
    .controller('EventChatController', ['$http', function($http) {
      this.comments = [
        {
          body: 'comment',
          user: {
            id: #{@user.id},
            name: 'Blendan',
            image_path: "#{image_url(@user.image_path)}"
          }
        }
      ];

      this.user = {
        id: #{@user.id},
        name: "#{@user.name}",
        image_path: "#{image_url(@user.image_path)}"
      };

      this.my = function (comment) {
        return comment.user.id = this.user.id;
      };

      this.post = function () {
        if (!this.body) {
          return;
        }
        $http
          .post(Routes.app_event_comments_path(#{@event.id}), {
            event_id: #{@event.id},
            user_id: #{@user.id},
            body: this.body
          })
          .success(_.bind(function() {
            this.comments.push({
              body: this.comment.replace(/\n/g, '<br/>'),
              user: this.user
            });
            this.comment = "";
          }, this))
          .error(function () {

          });
      };
    }]);
